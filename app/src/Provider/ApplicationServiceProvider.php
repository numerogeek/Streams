<?php namespace Streams\Provider;

use Composer\Autoload\ClassLoader;
use Illuminate\Support\ServiceProvider;
use Streams\Support\Application;

class ApplicationServiceProvider extends ServiceProvider
{
    /**
     * Register the service provider.
     *
     * @return void
     */
    public function register()
    {
        $this->registerApplication();
        $this->locate();
    }

    /**
     * Boot up our environment.
     */
    public function boot()
    {
        $this->registerEntryModels();
        $this->setupAddonManagers();
        $this->setupTemplate();
    }

    /**
     * Register the application support class
     */
    protected function registerApplication()
    {
        $this->app->singleton(
            'streams.application',
            function () {
                return new Application;
            }
        );
    }

    /**
     * Locate our app or head to the installer.
     */
    protected function locate()
    {
        if (\Config::get('debug')) {
            if (!\Application::isInstalled()) {
                if (\Request::segment(1) !== 'installer') {
                    header('Location: installer');
                    exit;
                }
            }
        } elseif (\Request::segment(1) !== 'installer') {
            \Application::locate();
        }
    }

    /**
     * Setup addon managers.
     */
    protected function setupAddonManagers()
    {
        $addons = array( /*'Block', 'Extension', 'FieldType', */
            'Module', /*'Tag', */
            'Theme'
        );

        foreach ($addons as $addon) {

            $interface = 'Addon\Module\Addons\Contract\\' . $addon . 'RepositoryInterface';
            $manager   = '\\' . $addon;

            $manager::mergeData(\App::make($interface));
        }
    }

    /**
     * Register entry models generated by streams.
     */
    protected function registerEntryModels()
    {
        $loader = new ClassLoader();

        $loader->addPsr4(
            'Streams\Model\\',
            'app/addons/models/streams/' . \Application::getAppRef()
        );
    }

    /**
     * Setup the template.
     */
    protected function setupTemplate()
    {
        $engine   = \App::make('streams.template.engine');
        $template = \App::make('streams.template');

        $theme = \Theme::getAdminTheme();

        if ($theme) {

            // Add the theme folder as the primary theme namespace.
            $engine->addFolder('theme', $theme->path . '/views');

            // Set the default layout.
            $template->layout('theme::layouts/admin/default');
        }
    }
}
